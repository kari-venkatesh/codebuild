version: 0.2

#env:
  #variables:
     # key: "value"
     # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"
  #secrets-manager:
     # key: secret-id:json-key:version-stage:version-id
     # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
     # - variable
     # - variable
  #git-credential-helper: yes
#batch:
  #fast-fail: true
  #build-list:
  #build-matrix:
  #build-graph:
phases:
  #install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
      # name: version
      # name: version
    #commands:
      # - command
      # - command
  pre_build:
    commands:
       - # rm /root/.m2/settings.xml
       - aws s3 cp s3://pieeye-maven-builds/settings.xml ~/.m2/settings.xml
       - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --region us-east-2 --domain pieeye --domain-owner 006396608450 --query authorizationToken --output text`
       - $(aws ecr get-login --no-include-email --region us-east-2)
  build:
    commands:
       - mvn clean spring-boot:build-image -Dmaven.test.skip=true
       - export TAG=`mvn -q -Dexec.executable=echo -Dexec.args='${containerimage.tag}' --non-recursive exec:exec`
       - echo "Pushing image $TAG"
       - docker push $TAG
      # - command
  #post_build:
    #commands:
      # - command
      # - command
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
#artifacts:
  #files:
    # - location
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
cache:
  paths:
    - '/root/.m2/**/*'